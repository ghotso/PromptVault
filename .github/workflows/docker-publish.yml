name: Build and Publish Docker Image (Manual)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch/Tag/SHA to build from (e.g. main, feature/x, v1.0.0, 9f3câ€¦ )'
        required: true
        default: 'main'
        type: string
      tags:
        description: 'Comma-separated tags to push (e.g. v1.0.0,latest)'
        required: true
        default: 'latest'
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # kann Branch, Tag oder Commit-SHA sein
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0

      - name: Show build info
        run: |
          echo "Repo: ghcr.io/${{ github.repository }}"
          echo "Ref:  ${{ github.event.inputs.branch }}"
          echo "Tags: ${{ github.event.inputs.tags }}"
          echo "Commit: $(git rev-parse HEAD)"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Prepare tag list
        id: prep
        shell: bash
        run: |
          set -euo pipefail
          IFS=',' read -ra INPUT_TAGS <<< "${{ github.event.inputs.tags }}"
          TAGS=""
          for t in "${INPUT_TAGS[@]}"; do
            tag="$(echo "$t" | xargs)"   # trim
            [[ -z "$tag" ]] && continue
            TAGS="$TAGS,ghcr.io/${{ github.repository }}:$tag"
          done
          TAGS="${TAGS#,}"               # leading comma entfernen
          echo "tags=$TAGS" >> "$GITHUB_OUTPUT"
          echo "Using tags: $TAGS"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          # Optional:
          # labels: |
          #   org.opencontainers.image.source=https://github.com/${{ github.repository }}
          #   org.opencontainers.image.revision=${{ github.sha }}
