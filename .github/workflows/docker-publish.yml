name: Build and Publish Docker Image (Manual)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch/Tag/SHA to build from (e.g. main, feature/x, v1.0.0, 9f3c…)'
        required: true
        default: 'main'
        type: string
      branch:
        description: 'Branch/Tag/SHA to build from (e.g. main, feature/x, v1.0.0, 9f3c… )'
        required: true
        default: 'main'
        type: string
      tags:
        description: 'Comma-separated tags to push (e.g. v1.0.0,latest)'
        description: 'Comma-separated tags to push (e.g. v1.0.0,latest)'
        required: true
        default: 'latest'
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write


    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0

      - name: Derive GHCR image name (lowercase)
        id: img
        shell: bash
        run: |
          set -euo pipefail
          repo_name_lower="$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')"
          image="ghcr.io/${{ github.repository_owner }}/${repo_name_lower}"
          echo "image=${image}" | tee -a "$GITHUB_OUTPUT"

      - name: Show build info
        shell: bash
        run: |
          echo "Image:  ${{ steps.img.outputs.image }}"
          echo "Ref:    ${{ github.event.inputs.branch }}"
          echo "Tags:   ${{ github.event.inputs.tags }}"
          echo "Commit: $(git rev-parse HEAD)"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Prepare tag list
        id: prep
        shell: bash
        run: |
          set -euo pipefail
          IFS=',' read -ra INPUT_TAGS <<< "${{ github.event.inputs.tags }}"
          TAGS=""
          for t in "${INPUT_TAGS[@]}"; do
            # trim spaces, force lowercase
            tag="$(echo "$t" | tr -d ' ' | tr '[:upper:]' '[:lower:]')"
            [[ -z "$tag" ]] && continue

            # optional: simple validation (semver or common words like latest/edge)
            if [[ ! "$tag" =~ ^(latest|edge|rc|beta|alpha|v?[0-9]+(\.[0-9]+){0,2}(-[0-9A-Za-z.-]+)?)$ ]]; then
              echo "::warning::Tag '$tag' looks unusual; GHCR requires lowercase and no spaces."
            fi

            TAGS="$TAGS,${{ steps.img.outputs.image }}:$tag"
          done

          TAGS="${TAGS#,}"
          if [[ -z "$TAGS" ]]; then
            echo "::error::No valid tags produced from input '${{ github.event.inputs.tags }}'."
            exit 1
          fi

          echo "tags=$TAGS" | tee -a "$GITHUB_OUTPUT"
          echo "Using tags: $TAGS"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          # Optional:
          # platforms: linux/amd64,linux/arm64
          # labels: |
          #   org.opencontainers.image.source=https://github.com/${{ github.repository }}
          #   org.opencontainers.image.revision=${{ github.sha }}
          #   org.opencontainers.image.ref.name=${{ github.ref_name }}
